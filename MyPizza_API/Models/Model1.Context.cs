//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPizza_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MyPizzaEntities1 : DbContext
    {
        public MyPizzaEntities1()
            : base("name=MyPizzaEntities1")
        {
            Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CijenePizza> CijenePizza { get; set; }
        public virtual DbSet<DodatniSastojci> DodatniSastojci { get; set; }
        public virtual DbSet<Gradovi> Gradovi { get; set; }
        public virtual DbSet<Korisnici> Korisnici { get; set; }
        public virtual DbSet<KorisnickeUloge> KorisnickeUloge { get; set; }
        public virtual DbSet<Narudzbe> Narudzbe { get; set; }
        public virtual DbSet<NarudzbePizze> NarudzbePizze { get; set; }
        public virtual DbSet<Ocjene> Ocjene { get; set; }
        public virtual DbSet<Pizze> Pizze { get; set; }
        public virtual DbSet<Racuni> Racuni { get; set; }
        public virtual DbSet<Sastojci> Sastojci { get; set; }
        public virtual DbSet<StatusiKorisnika> StatusiKorisnika { get; set; }
        public virtual DbSet<StatusiNarudzbi> StatusiNarudzbi { get; set; }
        public virtual DbSet<StatusiPizza> StatusiPizza { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<UlogeKorisnika> UlogeKorisnika { get; set; }
        public virtual DbSet<VelicinePizza> VelicinePizza { get; set; }
        public virtual DbSet<VrstePizza> VrstePizza { get; set; }
        public virtual DbSet<VrsteSastojci> VrsteSastojci { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> myPizza_Korisnici_Insert(string ime, string prezime, string korisnickoIme, string lozinkaHash, string lozinkaSalt, string email, string brojTelefona, Nullable<System.DateTime> datumRegistracije, Nullable<int> statusKorisnikaId, Nullable<int> gradId)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("ime", ime) :
                new ObjectParameter("ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("korisnickoIme", korisnickoIme) :
                new ObjectParameter("korisnickoIme", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("lozinkaHash", lozinkaHash) :
                new ObjectParameter("lozinkaHash", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("lozinkaSalt", lozinkaSalt) :
                new ObjectParameter("lozinkaSalt", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var brojTelefonaParameter = brojTelefona != null ?
                new ObjectParameter("brojTelefona", brojTelefona) :
                new ObjectParameter("brojTelefona", typeof(string));
    
            var datumRegistracijeParameter = datumRegistracije.HasValue ?
                new ObjectParameter("datumRegistracije", datumRegistracije) :
                new ObjectParameter("datumRegistracije", typeof(System.DateTime));
    
            var statusKorisnikaIdParameter = statusKorisnikaId.HasValue ?
                new ObjectParameter("statusKorisnikaId", statusKorisnikaId) :
                new ObjectParameter("statusKorisnikaId", typeof(int));
    
            var gradIdParameter = gradId.HasValue ?
                new ObjectParameter("gradId", gradId) :
                new ObjectParameter("gradId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("myPizza_Korisnici_Insert", imeParameter, prezimeParameter, korisnickoImeParameter, lozinkaHashParameter, lozinkaSaltParameter, emailParameter, brojTelefonaParameter, datumRegistracijeParameter, statusKorisnikaIdParameter, gradIdParameter);
        }
    
        public virtual ObjectResult<myPizza_Korisnici_SelectByImePrezime_Result> myPizza_Korisnici_SelectByImePrezime(string imePrezime)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("imePrezime", imePrezime) :
                new ObjectParameter("imePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<myPizza_Korisnici_SelectByImePrezime_Result>("myPizza_Korisnici_SelectByImePrezime", imePrezimeParameter);
        }
    
        public virtual int myPizza_KorisnickeUloge_Insert(Nullable<int> korisnikId, Nullable<int> ulogaKorisnikaId, Nullable<System.DateTime> datumIzmjene)
        {
            var korisnikIdParameter = korisnikId.HasValue ?
                new ObjectParameter("korisnikId", korisnikId) :
                new ObjectParameter("korisnikId", typeof(int));
    
            var ulogaKorisnikaIdParameter = ulogaKorisnikaId.HasValue ?
                new ObjectParameter("ulogaKorisnikaId", ulogaKorisnikaId) :
                new ObjectParameter("ulogaKorisnikaId", typeof(int));
    
            var datumIzmjeneParameter = datumIzmjene.HasValue ?
                new ObjectParameter("datumIzmjene", datumIzmjene) :
                new ObjectParameter("datumIzmjene", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("myPizza_KorisnickeUloge_Insert", korisnikIdParameter, ulogaKorisnikaIdParameter, datumIzmjeneParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> myPizza_VrstePizza_Insert(string vrsta, string opis, Nullable<System.DateTime> datumDodavanja, Nullable<System.DateTime> datumIzmjene, byte[] slika, byte[] slikaThumb)
        {
            var vrstaParameter = vrsta != null ?
                new ObjectParameter("vrsta", vrsta) :
                new ObjectParameter("vrsta", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("opis", opis) :
                new ObjectParameter("opis", typeof(string));
    
            var datumDodavanjaParameter = datumDodavanja.HasValue ?
                new ObjectParameter("datumDodavanja", datumDodavanja) :
                new ObjectParameter("datumDodavanja", typeof(System.DateTime));
    
            var datumIzmjeneParameter = datumIzmjene.HasValue ?
                new ObjectParameter("datumIzmjene", datumIzmjene) :
                new ObjectParameter("datumIzmjene", typeof(System.DateTime));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("slika", slika) :
                new ObjectParameter("slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("slikaThumb", slikaThumb) :
                new ObjectParameter("slikaThumb", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("myPizza_VrstePizza_Insert", vrstaParameter, opisParameter, datumDodavanjaParameter, datumIzmjeneParameter, slikaParameter, slikaThumbParameter);
        }
    
        public virtual int myPizza_VrsteSastojci_Insert(Nullable<int> vrstaId, Nullable<int> sastojakId)
        {
            var vrstaIdParameter = vrstaId.HasValue ?
                new ObjectParameter("vrstaId", vrstaId) :
                new ObjectParameter("vrstaId", typeof(int));
    
            var sastojakIdParameter = sastojakId.HasValue ?
                new ObjectParameter("sastojakId", sastojakId) :
                new ObjectParameter("sastojakId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("myPizza_VrsteSastojci_Insert", vrstaIdParameter, sastojakIdParameter);
        }
    }
}
